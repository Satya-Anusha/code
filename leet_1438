def longestSubarray(self, nums, limit):
       
        max_d, min_d = collections.deque(), collections.deque()
        result, left = 0, 0
        for right, num in enumerate(nums):
            while max_d and nums[max_d[-1]] <= num:
                max_d.pop()
            max_d.append(right)
            while min_d and nums[min_d[-1]] >= num:
                min_d.pop()
            min_d.append(right)
            while nums[max_d[0]]-nums[min_d[0]] > limit: 
                if max_d[0] == left:
                    max_d.popleft()
                if min_d[0] == left:
                    min_d.popleft()
                left += 1
            result = max(result, right-left+1)
        return result1438
